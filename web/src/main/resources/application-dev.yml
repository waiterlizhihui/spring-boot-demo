spring:
  datasource:
    #开启动态数据源对MP的支持(会有一些性能损失)
    mp-enabled: true
    druid:
      #druid的数据源监控页面配置
      stat-view-servlet:
        enabled: true
        loginUsername: admin
        loginPassword: 123456
      web-stat-filter:
        enabled: true
    # 多数据源配置
    dynamic:
      druid:
        # 连接池的配置信息
        # 初始化大小，最小，最大
        initial-size: 5
        min-idle: 5
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      datasource:
        master:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3306/beeblog?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
          username: root
          password: 1633212265
        slave1:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
          username: root
          password: 1633212265
  redis:
    database: 0
    host: 127.0.0.1
    password: 'zhrt'
    port: 6379
    lettuce:
      pool:
        max-active: 8 #最大数据库连接数，0为没有限制
        max-idle: 8 #最大等待连接中的数量，0为没有限制
        max-wait: -1ms #最大建立连接等待时间，如果超过此时间将抛出异常。设为-1表示无限制
        min-idle: 0 #最小等待连接中的数量，0为没有限制
        shutdown-timeout: 100ms
  #RabbitMQ消息队列配置
  rabbitmq:
    host: 127.0.0.1
    port: 5672
#    username:
#    password:
  #Quartz定时任务配置
  quartz:
    #持久化方式
    job-store-type: jdbc
    jdbc:
      initialize-schema: embedded
    properties:
      org:
        quartz:
          scheduler:
            instanceName: MyScheduler
            instanceId: AUTO
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: true
            clusterCheckinInterval: 10000
            useProperties: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
    wait-for-jobs-to-complete-on-shutdown: true
#mongo多数据源配置
mongodb:
  primary:
    uri: mongodb://rwuser:7iWJyIKwcu5@134.175.149.119:29019/admin
    database: suo_im
  secondary:
    uri: mongodb://rwuser:7iWJyIKwcu5@134.175.149.119:29019/admin
    database: mrw_so


#mybatis-plus配置
mybatis-plus:
  config-location: classpath:mybatis-config.xml
  mapper-locations: classpath:mapper/*Mapper.xml
  type-aliases-package: com.waiter.web.entity.mysql
#configuration:
# 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
#log-impl: org.apache.ibatis.logging.stdout.StdOutImpl